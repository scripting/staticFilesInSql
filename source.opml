<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Tue, 19 Sep 2023 22:13:54 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: staticFilesInSql</title>
		<dateCreated>Tue, 19 Sep 2023 21:45:14 GMT</dateCreated>
		<dateModified>Tue, 19 Sep 2023 22:13:54 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 5, 6, 13, 25, 27, 29, 31, 38, 48, 49, 51, 53, 56</expansionState>
		<vertScrollState>9</vertScrollState>
		<windowTop>223</windowTop>
		<windowLeft>493</windowLeft>
		<windowBottom>967</windowBottom>
		<windowRight>1662</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/staticfilesinsql/" created="Thu, 13 Jul 2023 14:21:20 GMT">
			<outline text="worknotes.md" created="Sun, 18 Jun 2023 16:13:00 GMT">
				<outline text="#### 9/19/23; 4:38:54 PM by DW" created="Sat, 12 Aug 2023 22:34:42 GMT">
					<outline text="Started." created="Tue, 19 Sep 2023 21:58:18 GMT"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;staticfilesinsql&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Manage static files for users in a MySQL table.&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;main&quot;: &quot;staticfilesinsql.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davesql&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="staticfilesinsql.js">
				<outline text="var myProductName = &quot;staticfilesinsql&quot;, myVersion = &quot;0.4.0&quot;;"/>
				<outline text="" created="Sat, 12 Aug 2023 22:37:22 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;); "/>
				<outline text="const request = require (&quot;request&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const davesql = require (&quot;davesql&quot;); " created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="" created="Mon, 24 Jul 2023 13:43:29 GMT"/>
				<outline text="var config = {" created="Fri, 10 Feb 2023 16:10:01 GMT">
					<outline text="};" created="Fri, 10 Feb 2023 16:12:11 GMT"/>
					</outline>
				<outline text="" created="Sun, 13 Aug 2023 12:15:59 GMT"/>
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (!err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="" created="Tue, 19 Sep 2023 20:49:45 GMT"/>
				<outline text="function getFile (screenname, filename, callback) {" created="Tue, 19 Sep 2023 20:49:46 GMT">
					<outline text="const sqltext = &quot;select * from staticfiles where screenname = &quot; + davesql.encode (screenname) + &quot; and filename = &quot; + davesql.encode (filename);"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {" created="Tue, 12 Jul 2022 17:39:31 GMT">
							<outline text="callback (err);" created="Tue, 12 Jul 2022 17:39:34 GMT"/>
							<outline text="}" created="Tue, 12 Jul 2022 17:39:37 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Jul 2022 17:39:38 GMT">
							<outline text="if (result.length == 0) {">
								<outline text="const message = &quot;Can't find the file &quot; + filename + &quot; for the user &quot; + screenname + &quot;.&quot;;" created="Tue, 19 Sep 2023 20:59:50 GMT"/>
								<outline text="callback ({message});" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
								<outline text="}"/>
								</outline>
							<outline text="else {" created="Fri, 22 Apr 2022 13:57:05 GMT">
								<outline text="const theFile = {" isComment="true" created="Tue, 19 Sep 2023 21:20:27 GMT">
									<outline text="screenname: result [0].screenname," created="Tue, 19 Sep 2023 21:20:57 GMT"/>
									<outline text="filename: result [0].filename," created="Tue, 19 Sep 2023 21:20:57 GMT"/>
									<outline text="filecontents: result [0].filecontents.toString ()," created="Tue, 19 Sep 2023 21:20:57 GMT"/>
									<outline text="whenCreated: result [0].whenCreated," created="Tue, 19 Sep 2023 21:20:57 GMT"/>
									<outline text="whenUpdated: result [0].whenUpdated," created="Tue, 19 Sep 2023 21:20:57 GMT"/>
									<outline text="ctSaves: result [0].ctSaves" created="Tue, 19 Sep 2023 21:20:57 GMT"/>
									<outline text="}" created="Tue, 19 Sep 2023 21:20:38 GMT"/>
									</outline>
								<outline text="callback (undefined, result [0]);" created="Sat, 07 May 2022 14:03:25 GMT"/>
								<outline text="}" created="Fri, 22 Apr 2022 13:57:08 GMT"/>
								</outline>
							<outline text="}" created="Tue, 12 Jul 2022 17:39:40 GMT"/>
							</outline>
						<outline text="});" created="Tue, 19 Sep 2023 20:53:25 GMT"/>
						</outline>
					<outline text="}" created="Tue, 19 Sep 2023 20:50:29 GMT"/>
					</outline>
				<outline text="function saveFile (screenname, filename, filecontents, callback) {" created="Tue, 19 Sep 2023 20:49:46 GMT">
					<outline text="const now = new Date ();" created="Tue, 19 Sep 2023 20:57:09 GMT"/>
					<outline text="const fileRec = {">
						<outline text="screenname, "/>
						<outline text="filename, " created="Tue, 19 Sep 2023 20:52:43 GMT"/>
						<outline text="filecontents," created="Tue, 19 Sep 2023 20:52:46 GMT"/>
						<outline text="whenCreated: now," created="Tue, 19 Sep 2023 20:56:56 GMT"/>
						<outline text="whenUpdated: now," created="Tue, 19 Sep 2023 20:57:01 GMT"/>
						<outline text="ctSaves: 1" created="Tue, 19 Sep 2023 21:35:11 GMT"/>
						<outline text="};"/>
						</outline>
					<outline text="getFile (screenname, filename, function (err, theOriginalFile) {" created="Tue, 19 Sep 2023 20:45:16 GMT">
						<outline text="if (!err) {" created="Tue, 19 Sep 2023 21:29:33 GMT">
							<outline text="fileRec.whenCreated = theOriginalFile.whenCreated;" created="Tue, 19 Sep 2023 21:29:56 GMT"/>
							<outline text="fileRec.ctSaves = theOriginalFile.ctSaves + 1;" created="Tue, 19 Sep 2023 21:29:56 GMT"/>
							<outline text="}" created="Tue, 19 Sep 2023 21:29:51 GMT"/>
							</outline>
						<outline text="const sqltext = &quot;replace into staticfiles &quot; + davesql.encodeValues (fileRec);"/>
						<outline text="davesql.runSqltext (sqltext, function (err, result) {">
							<outline text="if (err) {" created="Tue, 12 Jul 2022 17:39:31 GMT">
								<outline text="callback (err);" created="Tue, 12 Jul 2022 17:39:34 GMT"/>
								<outline text="}" created="Tue, 12 Jul 2022 17:39:37 GMT"/>
								</outline>
							<outline text="else {" created="Tue, 12 Jul 2022 17:39:38 GMT">
								<outline text="callback (undefined, true);" created="Tue, 12 Jul 2022 17:39:34 GMT"/>
								<outline text="}" created="Tue, 12 Jul 2022 17:39:40 GMT"/>
								</outline>
							<outline text="});" created="Tue, 19 Sep 2023 20:53:25 GMT"/>
							</outline>
						<outline text="});" created="Tue, 19 Sep 2023 20:45:52 GMT"/>
						</outline>
					<outline text="}" created="Tue, 19 Sep 2023 20:50:29 GMT"/>
					</outline>
				<outline text="" created="Sat, 19 Aug 2023 14:48:27 GMT"/>
				<outline text="var theTestData = {" created="Tue, 19 Sep 2023 12:58:05 GMT">
					<outline text="theArray: new Array ()" created="Tue, 19 Sep 2023 12:58:49 GMT"/>
					<outline text="}" created="Tue, 19 Sep 2023 12:58:57 GMT"/>
					</outline>
				<outline text="for (var i = 1; i &lt;= 15; i++) {" created="Tue, 19 Sep 2023 12:59:12 GMT">
					<outline text="theTestData.theArray.push (utils.getRandomSnarkySlogan ());" created="Tue, 19 Sep 2023 12:59:42 GMT"/>
					<outline text="}" created="Tue, 19 Sep 2023 12:59:37 GMT"/>
					</outline>
				<outline text="readConfig (&quot;config.json&quot;, config, function ()  {" created="Sat, 12 Aug 2023 23:07:16 GMT">
					<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Mon, 14 Aug 2023 14:26:45 GMT"/>
					<outline text="davesql.start (config.database, function () {">
						<outline text="const screenname = &quot;davewiner&quot;, filename = &quot;test.json&quot;;" created="Tue, 19 Sep 2023 20:54:32 GMT"/>
						<outline text="saveFile (screenname, filename, utils.jsonStringify (theTestData), function (err, result) {" created="Tue, 19 Sep 2023 20:45:16 GMT">
							<outline text="if (err) {" created="Tue, 19 Sep 2023 20:54:08 GMT">
								<outline text="console.log (err.message);" created="Tue, 19 Sep 2023 20:54:19 GMT"/>
								<outline text="}" created="Tue, 19 Sep 2023 20:54:10 GMT"/>
								</outline>
							<outline text="else {" created="Tue, 19 Sep 2023 20:54:11 GMT">
								<outline text="getFile (screenname, filename, function (err, theFile) {" created="Tue, 19 Sep 2023 20:45:16 GMT">
									<outline text="console.log (theFile.filecontents);" created="Tue, 19 Sep 2023 20:46:22 GMT"/>
									<outline text="});" created="Tue, 19 Sep 2023 20:45:52 GMT"/>
									</outline>
								<outline text="}" created="Tue, 19 Sep 2023 20:54:12 GMT"/>
								</outline>
							<outline text="});" created="Tue, 19 Sep 2023 20:45:52 GMT"/>
							</outline>
						<outline text="});" created="Wed, 14 Jul 2021 13:51:16 GMT"/>
						</outline>
					<outline text="});" created="Sat, 12 Aug 2023 23:07:41 GMT"/>
					</outline>
				<outline text="" created="Sat, 12 Aug 2023 23:07:17 GMT"/>
				</outline>
			<outline text="readme.md" created="Tue, 19 Sep 2023 21:50:04 GMT">
				<outline text="# staticFilesInSql">
					<outline text="Manage static files for users in a MySQL table."/>
					</outline>
				<outline text="### What this is" created="Tue, 19 Sep 2023 21:57:41 GMT">
					<outline text="We need to get static files for users in FeedLand and have been having trouble getting that to work with S3 for some reason. Let's do the same thing in an SQL table, and be done with it. " created="Sat, 12 Aug 2023 22:34:44 GMT"/>
					<outline text="Here's the command to create the table." created="Tue, 19 Sep 2023 20:39:38 GMT">
						<outline text="&lt;%includeExample (&quot;sqlCommands&quot;)%&gt;"/>
						</outline>
					</outline>
				</outline>
			<outline text="config.json" isComment="true" created="Mon, 14 Aug 2023 14:20:24 GMT">
				<outline text="{" created="Mon, 14 Aug 2023 14:20:26 GMT">
					<outline text="}" created="Mon, 14 Aug 2023 14:20:27 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Tue, 19 Sep 2023 21:45:27 GMT">
			<outline text="nodeEditorSuite.utilities.buildStaticFilesInSql ()" created="Fri, 21 Jul 2023 13:59:13 GMT"/>
			</outline>
		</body>
	</opml>
